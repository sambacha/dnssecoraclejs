/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SHA256Digest, SHA256DigestInterface } from "../SHA256Digest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102e0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f7e83aee14610030575b600080fd5b61004361003e3660046101c0565b610059565b6040516100509190610250565b60405180910390f35b6000602082146100845760405162461bcd60e51b815260040161007b9061025e565b60405180910390fd5b6100c8600084848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506101249050565b600286866040516100da929190610243565b602060405180830381855afa1580156100f7573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061011a919061019a565b1495945050505050565b8151600090610134836020610299565b111561013f57600080fd5b50016020015190565b80515b92915050565b60008083601f84011261016357600080fd5b50813567ffffffffffffffff81111561017b57600080fd5b60208301915083600182028301111561019357600080fd5b9250929050565b6000602082840312156101ac57600080fd5b60006101b88484610148565b949350505050565b600080600080604085870312156101d657600080fd5b843567ffffffffffffffff8111156101ed57600080fd5b6101f987828801610151565b9450945050602085013567ffffffffffffffff81111561021857600080fd5b61022487828801610151565b95989497509550505050565b600061023d8385846102b1565b50500190565b60006101b8828486610230565b81151581526020810161014b565b6020808252810161014b81601a81527f496e76616c6964207368613235362068617368206c656e677468000000000000602082015260400190565b600082198211156102ac576102ac6102bd565b500190565b82818337506000910152565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000804000a";

type SHA256DigestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SHA256DigestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SHA256Digest__factory extends ContractFactory {
  constructor(...args: SHA256DigestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SHA256Digest> {
    return super.deploy(overrides || {}) as Promise<SHA256Digest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SHA256Digest {
    return super.attach(address) as SHA256Digest;
  }
  connect(signer: Signer): SHA256Digest__factory {
    return super.connect(signer) as SHA256Digest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SHA256DigestInterface {
    return new utils.Interface(_abi) as SHA256DigestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SHA256Digest {
    return new Contract(address, _abi, signerOrProvider) as SHA256Digest;
  }
}
