/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DummyDigest, DummyDigestInterface } from "../DummyDigest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610122806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f7e83aee14610030575b600080fd5b61004861003e3660046100a5565b6001949350505050565b604051901515815260200160405180910390f35b60008083601f84011261006e57600080fd5b50813567ffffffffffffffff81111561008657600080fd5b60208301915083600182028301111561009e57600080fd5b9250929050565b600080600080604085870312156100bb57600080fd5b843567ffffffffffffffff8111156100d257600080fd5b6100de8782880161005c565b9450945050602085013567ffffffffffffffff8111156100fd57600080fd5b6101098782880161005c565b9598949750955050505056fea164736f6c6343000804000a";

type DummyDigestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyDigestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyDigest__factory extends ContractFactory {
  constructor(...args: DummyDigestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyDigest> {
    return super.deploy(overrides || {}) as Promise<DummyDigest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyDigest {
    return super.attach(address) as DummyDigest;
  }
  connect(signer: Signer): DummyDigest__factory {
    return super.connect(signer) as DummyDigest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyDigestInterface {
    return new utils.Interface(_abi) as DummyDigestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyDigest {
    return new Contract(address, _abi, signerOrProvider) as DummyDigest;
  }
}
